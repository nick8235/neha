{"version":3,"sources":["webpack:///./src/app/updatecustomer/updatecustomer.module.ts","webpack:///./src/app/updatecustomer/updatecustomer.page.html","webpack:///./src/app/updatecustomer/updatecustomer.page.scss","webpack:///./src/app/updatecustomer/updatecustomer.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEc;AAE3D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uEAAkB;KAC9B;CACF,CAAC;AAWF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QATpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,uEAAkB,CAAC;SACnC,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBrC,6wB;;;;;;;;;;;ACAA,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;ACAb;AACW;AACJ;AACR;AAOjD;IAME,4BACU,QAAsB,EACtB,MAAc,EACf,eAAgC,EAC/B,QAAwB;QAHxB,aAAQ,GAAR,QAAQ,CAAc;QACtB,WAAM,GAAN,MAAM,CAAQ;QACf,oBAAe,GAAf,eAAe,CAAiB;QAC/B,aAAQ,GAAR,QAAQ,CAAgB;QARlC,kBAAa,GAAW,EAAE,CAAC;QAC3B,kBAAa,GAAW,EAAE,CAAC;IAQvB,CAAC;IAEL,qCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,IAAS;YACvC,KAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;YAClB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;YAC/B,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAEK,yCAAY,GAAlB;;;;;;6BACM,KAAI,CAAC,aAAa,IAAI,EAAE,GAAxB,wBAAwB;wBACZ,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gCAC9C,OAAO,EAAE,sBAAsB;gCAC/B,QAAQ,EAAE,IAAI;6BACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;6BACP,KAAI,CAAC,aAAa,IAAI,EAAE,GAAxB,wBAAwB;wBACnB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gCAC9C,OAAO,EAAE,yBAAyB;gCAClC,QAAQ,EAAE,IAAI;6BACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;wBAEZ,IAAI,GAAG;4BACT,IAAI,EAAE,QAAQ;4BACd,WAAW,EAAG,IAAI,CAAC,EAAE;4BACrB,aAAa,EAAG,IAAI,CAAC,aAAa;4BAClC,aAAa,EAAG,IAAI,CAAC,aAAa;yBACnC,CAAC;wBACF,2EAA2E;wBAC3E,+BAA+B;wBAC/B,wBAAwB;wBACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;;;;;;KAgBvC;IA7DU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,oHAAyC;;SAE1C,CAAC;+EAQoB,qEAAY;YACd,sDAAM;YACE,8DAAe;YACrB,8DAAc;OAVvB,kBAAkB,CA+D9B;IAAD,yBAAC;CAAA;AA/D8B","file":"updatecustomer-updatecustomer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdatecustomerPage } from './updatecustomer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdatecustomerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UpdatecustomerPage]\n})\nexport class UpdatecustomerPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Update Customer</ion-title>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-back-button text=\\\"Back\\\" icon=\\\"\\\" color=\\\"tertiary\\\" fill=\\\"outline\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\"> Name </ion-label>\\n    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"name_customer\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\"> Description </ion-label>\\n    <ion-textarea [(ngModel)]=\\\"desc_customer\\\"></ion-textarea>\\n  </ion-item>\\n\\n  <ion-button expand=\\\"block\\\" padding color=\\\"tertiary\\\" *ngIf=\\\"id>=1\\\" (click)=\\\"updateProses()\\\" fill=\\\"outline\\\">Submit</ion-button>\\n\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZWN1c3RvbWVyL3VwZGF0ZWN1c3RvbWVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { PostProvider } from '../../providers/post-provider';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-updatecustomer',\n  templateUrl: './updatecustomer.page.html',\n  styleUrls: ['./updatecustomer.page.scss'],\n})\nexport class UpdatecustomerPage implements OnInit {\n\n  name_customer: string = '';\n  desc_customer: string = '';\n  id: number;\n\n  constructor(\n    private postPvdr: PostProvider,\n    private router: Router,\n    public toastController: ToastController,\n    private actRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.actRoute.params.subscribe((data: any) => {\n      this.id = data.id;\n      this.name_customer = data.name;\n      this.desc_customer = data.desc;\n      console.log(data);\n      });\n  }\n\n  async updateProses() {\n    if (this.name_customer == ''){\n      const toast = await this.toastController.create({\n        message: 'Customer is required',\n        duration: 2000\n      });\n      toast.present();\n    } else if (this.desc_customer == ''){\n      const toast = await this.toastController.create({\n        message: 'Description is required',\n        duration: 2000\n      });\n      toast.present();\n    } else {\n      let body = {\n        aksi: 'update',\n        customer_id : this.id,\n        name_customer : this.name_customer,\n        desc_customer : this.desc_customer,\n      };\n      // this.postPvdr.postData(body, 'file_aksi.php').subscribe( async data => {\n      //   var alertpesan = data.msg;\n      //   if (data.success) {\n      this.router.navigate(['/customer']);\n      //     const toast = await this.toastController.create({\n      //       message: 'Data updated successful',\n      //       duration: 2000\n      //     });\n      //     toast.present();\n      //   } else {\n      //     const toast = await this.toastController.create({\n      //       message: alertpesan,\n      //       duration: 2000\n      //     });\n      //   }\n      // });\n\n\n    }\n  }\n\n}\n"],"sourceRoot":""}