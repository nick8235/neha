{"version":3,"sources":["webpack:///./src/app/register/register.module.ts","webpack:///./src/app/register/register.page.html","webpack:///./src/app/register/register.page.scss","webpack:///./src/app/register/register.page.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-title>Register</ion-title>\\n        <ion-buttons slot=\\\"start\\\">\\n          <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n      </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <ion-list>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"> Fullname </ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"full_name\\\"></ion-input>\\n      </ion-item>\\n  \\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"> Phone Number </ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"phone_number\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"> Username </ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"username\\\"></ion-input>\\n      </ion-item>\\n    \\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"> Password </ion-label>\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"> Confirm Password </ion-label>\\n        <ion-input type=\\\"password\\\" [(ngModel)]=\\\"confirm_password\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n\\t      <ion-label floating>Birthday</ion-label>\\n\\t      <ion-datetime displayFormat=\\\"MMM DD YYYY\\\" [(ngModel)]=\\\"birthday\\\"></ion-datetime>\\n\\t    </ion-item>\\n      <ion-item>\\n\\t\\t    <ion-label floating>Gender</ion-label>\\n\\t\\t     <ion-select [(ngModel)]=\\\"gender\\\">\\n           <ion-select-option value=\\\"Male\\\">Male</ion-select-option>\\n           <ion-select-option value=\\\"Female\\\">Female</ion-select-option>\\n        </ion-select>\\n        </ion-item>\\n    </ion-list>\\n  \\n    <div padding>\\n      <ion-button expand=\\\"block\\\" shape=\\\"round\\\" (click)=\\\"addRegister()\\\">Submit</ion-button>\\n    </div>\\n  \\n  </ion-content>\\n\\n\\n\\n\"","module.exports = \".error-messages {\\n  font-size: 0.7em;\\n  color: red;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvQzpcXFVzZXJzXFxhbmlsXFxEb3dubG9hZHNcXGlvbmljLTQtbWFzdGVyXFxpb25pYy00LW1hc3RlclxcaW9uaWM0bG9naW5cXGxvZ2luL3NyY1xcYXBwXFxyZWdpc3RlclxccmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVixrQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1tZXNzYWdlcyB7XG4gICAgZm9udC1zaXplOiAwLjdlbTtcbiAgICBjb2xvcjogcmVkO1xuICAgIHRleHQtYWxpZ246ICBjZW50ZXI7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { PostProvider } from '../../providers/post-provider';\nimport { async } from 'q';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n\n full_name: string = '';\n phone_number: string = '';\n username: string = '';\n password: string = '';\n confirm_password: string = '';\n birthday :string ='';\n gender :string='';\n\n\n  constructor(\n    private router: Router,\n    public toastController: ToastController,\n    private postPvdr: PostProvider,\n    ) { }\n\n  ngOnInit() {\n\n  }\n\n  formLogin() {\n    this.router.navigate(['/login']);\n  }\n\n  async addRegister() {\n    if (this.full_name == '') {\n      const toast = await this.toastController.create({\n      message: 'Fullname is required',\n      duration: 2000\n      });\n      toast.present();\n    } else if (this.phone_number == '') {\n      const toast = await this.toastController.create({\n        message: 'Phone number is required',\n        duration: 2000\n        });\n      toast.present();\n    } else if (this.username == '') {\n      const toast = await this.toastController.create({\n        message: 'Username is required',\n        duration: 2000\n        });\n      toast.present();\n\n    } else if (this.password == '') {\n      const toast = await this.toastController.create({\n        message: 'Password is required',\n        duration: 2000\n        });\n      toast.present();\n\n    } else if (this.password != this.confirm_password) {\n      const toast = await this.toastController.create({\n        message: 'Password does not match',\n        duration: 2000\n        });\n      toast.present();\n    } else {\n      let body = {\n        full_name: this.full_name,\n        phone_number: this.phone_number,\n        username: this.username,\n        password: this.password,\n        aksi: 'add_register'\n      };\n    //   this.postPvdr.postData(body, 'file_aksi.php').subscribe(async data => {\n    //    var alertpesan = data.msg;\n    //    if (data.success) {\n    this.router.navigate(['/login']);\n    //      const toast = await this.toastController.create({\n    //       message: 'Register successfully',\n    //       duration: 2000\n    //      });\n    //      toast.present();\n    //    } else {\n    //      const toast = await this.toastController.create({\n    //        message: alertpesan,\n    //        duration: 2000\n    //      });\n    //    }\n    //  });\n\n     }\n  }\n\n}\n"],"sourceRoot":""}