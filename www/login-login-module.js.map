{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB5B,4PAA4P,uHAAuH,uoBAAuoB,MAAM,muBAAmuB,iBAAiB,aAAa,eAAe,yJAAyJ,oBAAoB,4IAA4I,oBAAoB,qb;;;;;;;;;;;ACA7lE,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;;ACAb;AACT;AACQ;AACY;AACpB;AAOzC;IAOE,mBACU,MAAc,EACf,eAAgC,EAC/B,QAAsB,EACtB,OAAgB;QAHhB,WAAM,GAAN,MAAM,CAAQ;QACf,oBAAe,GAAf,eAAe,CAAiB;QAC/B,aAAQ,GAAR,QAAQ,CAAc;QACtB,YAAO,GAAP,OAAO,CAAS;QAT3B,aAAQ,GAAW,EAAE,CAAC;QACtB,aAAQ,GAAW,EAAE,CAAC;QACf,SAAI,GAAG,UAAU,CAAC;IASlB,CAAC;IAEP,4BAAQ,GAAR;IAEA,CAAC;IAED,gCAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAEK,+BAAW,GAAjB;;;;;;6BACM,KAAI,CAAC,QAAQ,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,GAA1C,wBAA0C;wBACxC,IAAI,GAAG;4BACT,QAAQ,EAAE,IAAI,CAAC,QAAQ;4BACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;4BACvB,IAAI,EAAE,OAAO;yBACd,CAAC;wBACJ,4EAA4E;wBAC5E,gCAAgC;wBAChC,yBAAyB;wBACzB,yDAAyD;wBACxD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;;4BAgBrB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,OAAO,EAAE,8BAA8B;4BACvC,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;wBAGlB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;wBACnB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;;;;;KAElB;IACD,gCAAY,GAAZ;QACE,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAE/B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;SACpB;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;SACxB;IACH,CAAC;IAED;;OAEG;IACH,kCAAc,GAAd;QACE,0CAA0C;QAC1C,+DAA+D;IACjE,CAAC;IA7EQ,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,yFAAgC;;SAEjC,CAAC;+EASkB,sDAAM;YACE,8DAAe;YACrB,qEAAY;YACb,sDAAO;OAXf,SAAS,CA8EnB;IAAD,gBAAC;CAAA;AA9EmB","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<!-- <ion-header>\\n  <ion-toolbar>\\n    <ion-title>login</ion-title>\\n  </ion-toolbar>\\n</ion-header> -->\\n\\n\\n<ion-content padding>\\n  <div style=\\\"width:100%\\\" text-center>\\n    <ion-row class=\\\"login-logo\\\" style=\\\"margin-top:30px;\\\">\\n      <ion-col>\\n        <img src=\\\"assets/imgs/logo.jpg\\\" width=\\\"150\\\" height=\\\"150\\\" style=\\\"border-radius:50%;\\\" />\\n      </ion-col>\\n    </ion-row>\\n    \\n    \\n    <ion-row class=\\\"login-form\\\">\\n      <ion-col >\\n        <ion-card>\\n       <ion-item>\\n              <ion-label>\\n                <ion-icon name=\\\"person\\\"></ion-icon>\\n              </ion-label>\\n              <ion-input [(ngModel)]=\\\"username\\\" placeholder=\\\"username\\\" type=\\\"email\\\"></ion-input>\\n            </ion-item>\\n          </ion-card>\\n          <ion-card>\\n             <ion-item>\\n              <ion-label>\\n                <ion-icon name=\\\"lock\\\"></ion-icon>\\n              </ion-label>\\n              <ion-input [(ngModel)]=\\\"password\\\" placeholder=\\\"password\\\" type=\\\"{{type}}\\\"></ion-input>\\n\\n              <button *ngIf=\\\"!showPass\\\" ion-button clear color=\\\"dark\\\" type=\\\"button\\\" item-right (click)=\\\"showPassword()\\\">\\n                <ion-icon name=\\\"eye-off\\\"></ion-icon>\\n              </button>\\n              <button *ngIf=\\\"showPass\\\" ion-button clear color=\\\"dark\\\" type=\\\"button\\\" item-right (click)=\\\"showPassword()\\\">\\n                <ion-icon name=\\\"eye-on\\\"></ion-icon>              \\n              </button>\\n            </ion-item>\\n          </ion-card>\\n            <!-- <label>\\n              <input type=\\\"checkbox\\\" [(ngModel)]=\\\"rememberMe\\\" >Remember me</label> -->\\n             <p text-right>Forgot Password?</p>\\n\\n\\n          <!-- <a (click)=\\\"forgotPassword()\\\" style=\\\"float:right;text-align:right;padding: 0px;margin-top:5px;color:#0E4C48 \\\">\\n            Forgot Password?\\n          </a> -->\\n          <!-- <button ion-button block (click)=\\\"login()\\\" style=\\\"margin-top:30px;text-transform:none;\\\">LogIn</button> -->\\n         \\n            <ion-button expand=\\\"block\\\" shape=\\\"round\\\" (click)=\\\"proseslogin()\\\"style=\\\"margin-top:20px;text-transform:none;\\\">Sign In</ion-button>\\n          </ion-col>\\n        </ion-row>\\n            <!-- <ion-button expand=\\\"block\\\" shape=\\\"round\\\" (click)=\\\"formRegister()\\\">Register</ion-button> -->\\n         \\n          <p text-center>Don't have a account?</p>\\n          <ion-button expand=\\\"full\\\" shape=\\\"round\\\"  color=\\\"danger\\\" (click)=\\\"formRegister()\\\">Register</ion-button>\\n          <!-- </div> -->\\n       \\n    \\n  </div>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { PostProvider } from '../../providers/post-provider';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n username: string = '';\n password: string = '';\n public type = 'password';\n  showPass: boolean;\n  rememberMe: false;\n  constructor(\n    private router: Router,\n    public toastController: ToastController,\n    private postPvdr: PostProvider,\n    private storage: Storage,\n    \n    ) { }\n\n  ngOnInit() {\n\n  }\n\n  formRegister() {\n    this.router.navigate(['/register']);\n  }\n\n  async proseslogin() {\n    if (this.username != '' && this.password != '') {\n      let body = {\n        username: this.username,\n        password: this.password,\n        aksi: 'login'\n      };\n    //   this.postPvdr.postData(body, 'file_aksi.php').subscribe(async data => {\n    //    var alertpesan = data.msg;\n    //    if (data.success) {\n    //      this.storage.set('session_storage', data.result);\n     this.router.navigate(['/customer']);\n    //      const toast = await this.toastController.create({\n    //       message: 'Welcome!',\n    //       duration: 2000\n    //      });\n    //      toast.present();\n    //    } else {\n    //      const toast = await this.toastController.create({\n    //        message: alertpesan,\n    //        duration: 2000\n    //      });\n    //      toast.present();\n    //    }\n    //  });\n\n    } else {\n      const toast = await this.toastController.create({\n        message: 'Username or password invalid',\n        duration: 2000\n      });\n      toast.present();\n    }\n\n    this.username = '';\n    this.password = '';\n\n    }\n    showPassword() {\n      this.showPass = !this.showPass;\n  \n      if (this.showPass) {\n        this.type = 'text';\n      } else {\n        this.type = 'password';\n      }\n    }\n  \n    /**\n     * Forgot the password\n     */\n    forgotPassword() {\n      //this.navCtrl.push(RetrievePasswordPage);\n      //this.navCtrl.push(OtpVerificationPage,{email:this.UserName});\n    }\n  }\n"],"sourceRoot":""}