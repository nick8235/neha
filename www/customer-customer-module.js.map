{"version":3,"sources":["webpack:///./src/app/customer/customer.module.ts","webpack:///./src/app/customer/customer.page.html","webpack:///./src/app/customer/customer.page.scss","webpack:///./src/app/customer/customer.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEE;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,0gBAA0gB,UAAU,qnBAAqnB,wBAAwB,+sB;;;;;;;;;;;ACAjqC,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;;ACAb;AACT;AACQ;AACY;AACpB;AASzC;IAQE,sBACU,MAAc,EACd,QAAsB,EACvB,eAAgC,EAC/B,OAAgB;QAHhB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAc;QACvB,oBAAe,GAAf,eAAe,CAAiB;QAC/B,YAAO,GAAP,OAAO,CAAS;QAV1B,cAAS,GAAQ,EAAE,CAAC;QACpB,UAAK,GAAW,EAAE,CAAC;QACnB,UAAK,GAAW,CAAC,CAAC;IASd,CAAC;IAEL,+BAAQ,GAAR;IACA,CAAC;IAED,uCAAgB,GAAhB;QAAA,iBAQC;QAPC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YAC3C,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,mCAAY,GAAlB;;;;;;wBACE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;wBACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gCAC9C,OAAO,EAAE,mBAAmB;gCAC5B,QAAQ,EAAE,IAAI;6BACd,CAAC;;wBAHG,KAAK,GAAG,SAGX;wBACH,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KAEjB;IAGD,kCAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,qCAAc,GAAd,UAAe,EAAE,EAAE,IAAI,EAAE,IAAI;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,mCAAY,GAAZ,UAAa,EAAE,EAAE,IAAI,EAAE,IAAI;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;IAC1E,CAAC;IAED,gCAAS,GAAT,UAAU,KAAK;QAAf,iBAKC;QAJC,UAAU,CAAC;YACT,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAED,+BAAQ,GAAR,UAAS,KAAU;QAAnB,iBAOC;QANC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC;QACzB,UAAU,CAAC;YACX,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC;gBACzB,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC;QACH,CAAC,EAAE,GAAG,CAAC,CAAC;IACV,CAAC;IAGD,kCAAW,GAAX,UAAY,EAAE;QACZ,IAAI,IAAI,GAAG;YACP,IAAI,EAAE,QAAQ;YACd,WAAW,EAAG,EAAE;SACjB,CAAC;QAEJ,oEAAoE;QACpE,+BAA+B;QAC/B,QAAQ;IACV,CAAC;IAED,mCAAY,GAAZ;QAAA,iBAeC;QAdC,OAAO,IAAI,OAAO,CAAC,iBAAO;YACxB,IAAI,IAAI,GAAG;gBACT,IAAI,EAAE,SAAS;gBACf,KAAK,EAAG,KAAI,CAAC,KAAK;gBAClB,KAAK,EAAG,KAAI,CAAC,KAAK;aACnB,CAAC;YAEF,oEAAoE;YACpE,wCAAwC;YACxC,qCAAqC;YACrC,MAAM;YACN,mBAAmB;YACnB,MAAM;QACR,CAAC,CAAC,CAAC;IACL,CAAC;IA/FU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,kGAAmC;;SAEpC,CAAC;+EAUkB,sDAAM;YACJ,qEAAY;YACN,8DAAe;YACtB,sDAAO;OAZf,YAAY,CAiGxB;IAAD,mBAAC;CAAA;AAjGwB","file":"customer-customer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CustomerPage } from './customer.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CustomerPage]\n})\nexport class CustomerPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"primary\\\">\\n          <ion-button (click)=\\\"proseslogout()\\\"><ion-icon slot=\\\"end\\\" name=\\\"log-out\\\"></ion-icon></ion-button>\\n      </ion-buttons>\\n   \\n    <ion-buttons slot=\\\"primary\\\" (click)=\\\"addCustomer()\\\">\\n      <ion-button color=\\\"tertiary\\\" fill=\\\"outline\\\">\\n        New\\n        <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    Welcome {{username}}\\n    <br>\\n    <br>\\n\\n   <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content\\n      pullingIcon=\\\"arrow-dropdown\\\"\\n      pullingText=\\\"Pull to refresh\\\"\\n      refreshingSpinner=\\\"circles\\\"\\n      refreshingText=\\\"Refreshing...\\\">\\n    </ion-refresher-content>\\n  </ion-refresher>\\n\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let customer of customers\\\">\\n      <ion-item-options side=\\\"start\\\">\\n        <ion-item-option color=\\\"danger\\\" (click)=\\\"delCustomer(customer.customer_id)\\\">Delete</ion-item-option>\\n      </ion-item-options>\\n  \\n      <ion-item>\\n        <ion-label>{{customer.name_customer}}</ion-label>\\n      </ion-item>\\n\\n      <ion-item-options side=\\\"end\\\">\\n\\n        <ion-item-option color=\\\"secondary\\\" (click)=\\\"showCustomer(customer.customer_id,customer.name_customer,customer.desc_customer)\\\">Show</ion-item-option>\\n     \\n        <ion-item-option (click)=\\\"updateCustomer(customer.customer_id,customer.name_customer,customer.desc_customer)\\\">Update</ion-item-option>\\n\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n\\n  <ion-infinite-scroll  (ionInfinite)=\\\"loadData($event)\\\">\\n    <ion-infinite-scroll-content\\n      loadingSpinner=\\\"bubbles\\\"\\n      loadingText=\\\"Loading more data...\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n  \\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVyL2N1c3RvbWVyLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\nimport { PostProvider } from '../../providers/post-provider';\nimport { Storage } from '@ionic/storage';\n\n\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.page.html',\n  styleUrls: ['./customer.page.scss'],\n})\nexport class CustomerPage implements OnInit {\n\n  customers: any = [];\n  limit: number = 10;\n  start: number = 0;\n  username: string;\n  anggota: any;\n\n  constructor(\n    private router: Router,\n    private postPvdr: PostProvider,\n    public toastController: ToastController,\n    private storage: Storage,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.customers = [];\n    this.start = 0;\n    this.loadCustomer();\n    this.storage.get('session_storage').then((res) => {\n      this.anggota = res;\n      this.username = this.anggota.username;\n    });\n  }\n\n  async proseslogout() {\n    this.storage.clear();\n    this.router.navigate(['/login']);\n    const toast = await this.toastController.create({\n      message: 'Logout successful',\n      duration: 2000\n     });\n    toast.present();\n\n  }\n\n\n  addCustomer() {\n    this.router.navigate(['/addcustomer']);\n  }\n\n  updateCustomer(id, name, desc) {\n    this.router.navigate(['/updatecustomer/' + id + '/' + name + '/' + desc]);\n  }\n\n  showCustomer(id, name, desc) {\n    this.router.navigate(['/showcustomer/' + id + '/' + name + '/' + desc]);\n  }\n\n  doRefresh(event) {\n    setTimeout(() => {\n      this.ionViewWillEnter();\n      event.target.complete();\n    }, 500);\n  }\n\n  loadData(event: any) {\n    this.start += this.limit;\n    setTimeout(() => {\n    this.loadCustomer().then(() => {\n    event.target.complete();\n    });\n    }, 500);\n  }\n\n\n  delCustomer(id) {\n    let body = {\n        aksi: 'delete',\n        customer_id : id\n      };\n\n    // this.postPvdr.postData(body, 'file_aksi.php').subscribe(data => {\n    //     this.ionViewWillEnter();\n    //   });\n  }\n\n  loadCustomer() {\n    return new Promise(resolve => {\n      let body = {\n        aksi: 'getdata',\n        limit : this.limit,\n        start : this.start,\n      };\n\n      // this.postPvdr.postData(body, 'file_aksi.php').subscribe(data => {\n      //   for (let customer of data.result) {\n      //     this.customers.push(customer);\n      //   }\n      //   resolve(true);\n      // });\n    });\n  }\n\n}\n"],"sourceRoot":""}